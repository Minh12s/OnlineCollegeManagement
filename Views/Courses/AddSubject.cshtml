@model OnlineCollegeManagement.Models.Subjects

@{
    ViewData["Title"] = "Add Courses";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}


<style>
    .row {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -ms-flex-wrap: wrap;
        flex-wrap: wrap;
        margin-right: -15px;
        margin-left: -15px;
    }

    .col-md-12 {
        -webkit-box-flex: 0;
        -ms-flex: 0 0 100%;
        flex: 0 0 100%;
        max-width: 100%;
    }

    .form-control {
        display: block;
        width: 100%;
        padding: 0.375rem 0.75rem;
        font-size: 15px;
        line-height: 1.5;
        color: black;
        background-color: #f1f1f1;
        background-clip: padding-box;
        height: 45px;
        border: 1px solid #dadada;
        border-radius: .357rem;
        -webkit-transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;
        transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;
        -o-transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;
    }

    .control-label {
        font-weight: 600;
        color: black;
    }

    .btn-save {
        background-color: rgb(166 236 171);
        color: rgb(1 123 10);
        /* width: 100px; */
        font-weight: 600;
        letter-spacing: 1px;
        border-color: none;
        border-radius: .357rem;
        border: none;
        padding: 5px 20px;
        margin-top: 10px;
    }

    .btn-cancel {
        background-color: rgb(255 197 197);
        color: rgb(190, 40, 40);
        /* width: 100px; */
        font-weight: 600;
        letter-spacing: 1px;
        border-color: none;
        border-radius: .357rem;
        border: none;
        padding: 8px 20px;
        margin-top: 10px;
    }

    .main-section {
        margin-left: 15px;
    }

    /* Định dạng cho bảng */
    .table {
        width: 100%;
        border-collapse: collapse;
        border-spacing: 0;
    }

        /* Định dạng cho hàng */
        .table tr {
            border-bottom: 1px solid #ddd; /* Đường kẻ dưới cho mỗi hàng */
        }

        /* Định dạng cho cột */
        .table th, .table td {
            padding: 8px; /* Khoảng cách giữa nội dung và biên của mỗi ô */
            text-align: left; /* Căn lề trái cho nội dung */
        }

        /* Định dạng cho tiêu đề của bảng */
        .table th {
            background-color: #f2f2f2; /* Màu nền của tiêu đề */
            font-weight: bold; /* In đậm cho tiêu đề */
        }

        /* Định dạng cho ô checkbox */
        .table input[type="checkbox"] {
            margin: 0; /* Không margin */
        }

        /* Định dạng cho hàng chẵn */
        .table tbody tr:nth-child(even) {
            background-color: #f9f9f9; /* Màu nền của hàng chẵn */
        }

    .error-message {
        color: red;
        justify-content:center
    }

    .alert {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100%; /* Đảm bảo nội dung được căn giữa theo chiều dọc */
        padding: 20px 15px;
    }


  


</style>
<section class="is-title-bar">
    <div class="flex flex-col md:flex-row items-center justify-between space-y-6 md:space-y-0">
        <ul>
            <li style="margin-left:-50px;">Admin</li>
            <li>Add Courses</li>
        </ul>

    </div>
</section>
<section class="section main-section">
    <div class="row">
        <div class="col-md-12">
            <div class="tile">

                <div class="tile-body">
                    <form class="edit-product-form" asp-route-courseId="@ViewBag.CourseId" asp-controller="Courses" asp-action="AddSubject" method="post" enctype="multipart/form-data">
                        <div class="form-group col-md-3">
                            <label class="control-label">Course Name: @ViewBag.CourseName</label>
                            <input type="hidden" name="courseId" value="@ViewBag.CourseId" />
                        </div>
                        <div class="form-group col-md-12">
                            <label class="control-label">Subjects</label>
                            <div class="alert">
                                <span style="align-items:center" class="error-message">@ViewBag.ErrorMessage</span>

                           </div>
                            <div class="alert">
                                <span style="align-items:center" class="error-message">@ViewBag.ErrorMessages</span>

                            </div>

                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>Subjects Code</th>
                                        <th>Subject Name</th>
                                        <th>Select</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var subject in ViewBag.Subjects)
                                    {
                                        <tr>
                                            <td>@subject.SubjectCode</td>
                                            <td>
                                                @subject.SubjectName
                                               
                                            </td>

                                            <td>
                                                <input type="checkbox" name="selectedSubjects" value="@subject.SubjectsId">
                                            </td>
                                        </tr>
                                    }

                                </tbody>
                            </table>
                            <div class="table-pagination">
                                <div class="flex items-center justify-between">
                                    <div class="buttons">
                                        @for (int i = 1; i <= ViewBag.TotalPages; i++)
                                        {
                                            <button type="button" class="button @(ViewBag.CurrentPage == i ? "active" : "")" onclick=" location.href='@Url.Action("AddSubject", "Courses", new { page = i, pageSize = ViewBag.PageSize, courseId = @ViewBag.CourseId})'">@i</button>
                                        }
                                    </div>
                                    <small>Page @ViewBag.CurrentPage of @ViewBag.TotalPages</small>
                                </div>
                            </div>
                        </div>
                        <button class="btn btn-save" type="submit">Save</button>
                        <a class="btn btn-cancel" href="/Courses/Courses">Cancel</a>
                    </form>




                </div>
            </div>
        </div>
    </div>
</section>



<script>
    // Kiểm tra xem tham số clearSessionStorage có tồn tại trong URL không
    const urlParams = new URLSearchParams(window.location.search);
    const clearSessionStorage = urlParams.has('clearSessionStorage');

    // Nếu có, xóa dữ liệu sessionStorage và localStorage
    if (clearSessionStorage) {
        sessionStorage.clear();
        localStorage.clear();
    }
</script>





<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Khởi tạo mảng để lưu trữ các mục đã chọn
        var selectedSubjects = [];

        // Load dữ liệu từ localStorage nếu có
        var storedSubjects = localStorage.getItem("selectedSubjects");
        if (storedSubjects) {
            selectedSubjects = JSON.parse(storedSubjects);
            // Hiển thị các mục đã chọn khi trang được tải lại
            displaySelectedSubjects();
        }

        // Function để hiển thị các mục đã chọn
        function displaySelectedSubjects() {
            selectedSubjects.forEach(function (subjectId) {
                // Tìm checkbox tương ứng với subjectId và đánh dấu là đã chọn
                var checkbox = document.querySelector('input[name="selectedSubjects"][value="' + subjectId + '"]');
                if (checkbox) {
                    checkbox.checked = true;
                }
            });
        }

        // Lưu trữ dữ liệu vào localStorage khi checkbox được chọn hoặc bỏ chọn
        var checkboxes = document.querySelectorAll('input[name="selectedSubjects"]');
        checkboxes.forEach(function (checkbox) {
            checkbox.addEventListener("change", function () {
                var subjectId = this.value;
                if (this.checked) {
                    // Nếu checkbox được chọn, thêm subjectId vào mảng selectedSubjects
                    selectedSubjects.push(subjectId);
                } else {
                    // Nếu checkbox bị bỏ chọn, loại bỏ subjectId khỏi mảng selectedSubjects
                    var index = selectedSubjects.indexOf(subjectId);
                    if (index !== -1) {
                        selectedSubjects.splice(index, 1);
                    }
                }
                // Lưu mảng selectedSubjects vào localStorage
                localStorage.setItem("selectedSubjects", JSON.stringify(selectedSubjects));
            });
        });

        // Xóa dữ liệu đã chọn khi form được submit
        var form = document.querySelector('.edit-product-form');
        form.addEventListener('submit', function () {
            localStorage.removeItem('selectedSubjects');
        });
    });
</script>


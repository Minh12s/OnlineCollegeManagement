
@{
    ViewData["Title"] = "List Student";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<style>
    .alert {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100%; /* Đảm bảo nội dung được căn giữa theo chiều dọc */
        padding: 20px 15px;
    }

    .text-error {
        color: red;
    }

    .btn-primary {
        color: rgb(245 157 57);
        background-color: rgb(251 226 197);
        border-color: none;
        /* border-top-left-radius: 10px !important; */
        /* border-bottom-right-radius: 10px !important; */
        border-radius: .357rem;
        border: none;
        font-weight: 600;
        padding: 5px 20px; /* Điều chỉnh kích thước theo ý muốn */
    }

    .edit-button {
        margin-top: 10px; /* Điều chỉnh giá trị margin-top theo ý muốn */
    }

    .btn-add {
        color: white;
        background-color: black;
        border-color: none;
        /* border-top-left-radius: 10px !important; */
        /* border-bottom-right-radius: 10px !important; */
        border-radius: .357rem;
        border: none;
        font-weight: 600;
        padding: 10px 20px; /* Điều chỉnh kích thước theo ý muốn */
    }

    .btn-danger {
        color: #FFF;
        background-color: #dc3545;
        border-color: #dc3545;
        border-color: none;
        /* border-top-left-radius: 10px !important; */
        /* border-bottom-right-radius: 10px !important; */
        border-radius: .357rem;
        border: none;
        font-weight: 600;
        padding: 5px 20px;
    }

        .btn-danger:hover {
            color: #FFF;
            background-color: #c82333;
            border-color: #bd2130;
        }

        .btn-danger:focus, .btn-danger.focus {
            -webkit-box-shadow: 0 0 0 0 rgba(220, 53, 69, 0.5);
            box-shadow: 0 0 0 0 rgba(220, 53, 69, 0.5);
        }

        .btn-danger.disabled, .btn-danger:disabled {
            color: #FFF;
            background-color: #dc3545;
            border-color: #dc3545;
        }

    .button-group {
        display: flex;
    }

        .button-group > * {
            margin-right: 10px; /* Khoảng cách giữa các nút */
        }

    .btn-save {
        background-color: rgb(166 236 171);
        color: rgb(1 123 10);
        /* width: 100px; */
        font-weight: 600;
        letter-spacing: 1px;
        border-color: none;
        border-radius: .357rem;
        border: none;
        padding: 5px 20px;
        margin-top: 10px;
    }

    .btn-cancel {
        background-color: rgb(255 197 197);
        color: rgb(190, 40, 40);
        /* width: 100px; */
        font-weight: 600;
        letter-spacing: 1px;
        border-color: none;
        border-radius: .357rem;
        border: none;
        padding: 8px 20px;
        margin-top: 10px;
    }
</style>
<section class="is-title-bar">
    <div class="flex flex-col md:flex-row items-center justify-between space-y-6 md:space-y-0">
        <ul>
            <li style="margin-left:-50px;">Admin</li>
            <li>List Student</li>
        </ul>

    </div>

</section>
<section class="is-hero-bar">
    <div class="flex flex-col md:flex-row items-center justify-start">

        <!-- Phần này để chứa nút "Print PDF" -->
        <div class="col-sm-2" style="margin-right: 5px;">
            <button onclick="myApp.printTable()" class="btn btn-add">
                <i class="fas fa-file-pdf"></i>
                Print PDF
            </button>
        </div>

        <!-- Phần này để chứa nút "Export Excel" -->
        <div class="col-sm-2" style="margin-right: 5px;">
            <button onclick="exportBlogToExcel()" class="btn btn-add">
                <i class="fas fa-file-excel"></i>
                Export Excel
            </button>
        </div>

        <!-- Phần này để chứa nút "Excel Filtered" -->
        <div class="col-sm-2">
            <button onclick="exportExcel()" class="btn btn-add">
                <i class="fas fa-file-excel"></i>
                Excel Filtered
            </button>
        </div>
    </div>
</section>
<form id="addStudentsForm" method="post" asp-controller="Classes" asp-action="AddStudentToClass" asp-route-classesId="@ViewBag.ClassesId" >
    <section class="section main-section">
        <div class="card has-table">
            <header class="card-header">
                <p class="card-header-title">
                    @*<span class="icon"><i class="mdi mdi-shopping"></i></span>*@
                    List Student
                </p>


            </header>

            <div class="card-content">
                @if (Model.Count == 0)

                {
                    <div class="alert alert-warning" role="alert">
                        No Student found.
                    </div>
                }
                else
                {
                    @if (!ViewData.ModelState.IsValid)
                    {
                        <div class="alert alert-danger" role="alert">
                            @foreach (var key in ViewData.ModelState.Keys)
                            {
                                foreach (var error in ViewData.ModelState[key].Errors)
                                {
                                    <p class="text-error">@error.ErrorMessage</p>
                                }
                            }
                        </div>
                    }

            <table class="table table-hover table-bordered js-copytextarea" cellpadding="0" cellspacing="0" border="0" id="sampleTable">
                <thead>
                    <tr>
                        <th width="10"><input type="checkbox" id="selectAll"></th>
                        <th>Student ID</th>
                        <th>Student Code</th>
                        <th>Telephone</th>
                        <th>Start Date</th>
                        <th>End Date</th>
                        <th>Study Days</th>
                        <th>Study Session</th>
                        <th>Course Name</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var student in Model)
                    {
                        <tr>
                            <td width="10">
                                <input type="checkbox" name="selectedStudents" value="@student.StudentCoursesId">
                            </td>
                            <td>@student.OfficialStudentId</td>
                            <td>@student.OfficialStudent.StudentCode</td>
                            <td>@student.Telephone</td>
                            <td>@student.EnrollmentStartDate.ToString("yyyy-MM-dd")</td>
                            <td>@student.EnrollmentEndDate.ToString("yyyy-MM-dd")</td>
                            <td>@student.StudyDays</td>
                            <td>@student.StudySession</td>
                            <td>@student.Course.CourseName</td>
                        </tr>
                    }
                </tbody>

            </table>

                    <div class="table-pagination">
                        <div class="flex items-center justify-between">
                            <div class="buttons">
                                @for (int i = 1; i <= ViewBag.TotalPages; i++)
                                {
                                    <button type="button" class="button @(ViewBag.PageNumber == i ? "active" : "")" onclick="location.href='@Url.Action("AddStudentToClass", "Classes", new { classesId = ViewBag.ClassesId, page = i })'">@i</button>
                                }
                            </div>
                            <small>Page @ViewBag.PageNumber of @ViewBag.TotalPages</small>
                        </div>
                    </div>
                }

            </div>
        </div>
        <button class="btn btn-save" type="submit">Save</button>
        <a class="btn btn-cancel" href="/Classes/Classes">Cancel</a>
    </section>
</form>


<script>// Kiểm tra xem tham số clearSessionStorage có tồn tại trong URL không
    const urlParams = new URLSearchParams(window.location.search);
    const clearSessionStorage = urlParams.has('clearSessionStorage');

    // Nếu có, xóa dữ liệu sessionStorage và localStorage
    if (clearSessionStorage) {
        sessionStorage.clear();
        localStorage.clear();
    }</script>





<script>
    document.addEventListener("DOMContentLoaded", function () {
        var selectedStudents = [];

        var storedStudents = localStorage.getItem("selectedStudents");
        if (storedStudents) {
            selectedStudents = JSON.parse(storedStudents);
            displaySelectedStudents();
        }

        function displaySelectedStudents() {
            selectedStudents.forEach(function (student) {
                var checkbox = document.querySelector('input[name="selectedStudents"][value="' + student + '"]');
                if (checkbox) {
                    checkbox.checked = true;
                }
            });
        }

        var checkboxes = document.querySelectorAll('input[name="selectedStudents"]');
        checkboxes.forEach(function (checkbox) {
            checkbox.addEventListener("change", function () {
                var student = this.value;
                if (this.checked) {
                    selectedStudents.push(student);
                } else {
                    var index = selectedStudents.indexOf(student);
                    if (index !== -1) {
                        selectedStudents.splice(index, 1);
                    }
                }
                localStorage.setItem("selectedStudents", JSON.stringify(selectedStudents));
            });
        });

        var form = document.querySelector('.edit-product-form');
        form.addEventListener('submit', function () {
            localStorage.removeItem('selectedStudents');
        });
    });

   </script>